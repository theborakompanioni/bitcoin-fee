syntax = "proto3";

package blockchair;

import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";

option java_package = "org.tbk.bitcoin.tool.fee.blockchair.proto";
option java_outer_classname = "BlockchairProtos";
option java_multiple_files = true;

/**
 * Bitcoin Stats
 * https://api.blockchair.com/bitcoin/stats
 * Docs: https://blockchair.com/api/docs#link_001
 *
 * Just the fields regarding fees are taken into account;
 */
message BitcoinStatsFeesOnly {
    BitcoinStatsDataFeesOnly data = 1 [json_name = "data"];
}

message BitcoinStatsDataFeesOnly {
    /**
     * "suggests a proper transaction fee in satoshi per byte based on the latest block"

     * This value shows a good enough approximation of an optimal fee value suggested by our engine based on the
     * current mempool state (in satoshi per byte) to get into the next block. Please note that for transactions
     * less important for you this fee suggestion may be too high, while for very important transactions it may not
     * be enough if you'll get unlucky because of the lack of new blocks.
     */
    int64 suggested_transaction_fee_per_byte_sat = 1 [json_name = "suggested_transaction_fee_per_byte_sat"];
    //  number of transactions in the mempool
    int64 memool_transactions = 2 [json_name = "mempool_transactions"];
    //  mempool size in bytes
    int64 mempool_size = 3 [json_name = "mempool_size"];
    //  average transaction fee over the last 24 hours
    int64 average_transaction_fee_24h = 4 [json_name = "average_transaction_fee_24h"];
    //  median transaction fee over the last 24 hours
    int64 median_transaction_fee_24h = 5 [json_name = "median_transaction_fee_24h"];
    // mempool_tps â€” number of transactions per second added to the mempool
    double mempool_tps = 6 [json_name = "mempool_tps"];
}

